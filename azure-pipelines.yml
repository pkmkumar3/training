# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
stages:
  - stage: Build_stage
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: mypool
        steps:
      
        - task: SonarCloudPrepare@1
          inputs:
            SonarCloud: 'sonar'
            organization: 'prjkumar1205'
            scannerMode: 'Other'
            extraProperties: |
              # Additional properties that will be passed to the scanner,
              # Put one key=value per line, example:
              # sonar.exclusions=**/*.bin
              sonar.projectKey=prjkumar1205_training
              sonar.projectName=training

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: 'mvn package'
        - task: Docker@2
          inputs:
            containerRegistry: 'acr'
            repository: 'test'
            command: 'build'
            Dockerfile: '**/maven'
        - task: SonarCloudAnalyze@1
        
        - task: Docker@2
          inputs:
            containerRegistry: 'acr'
            repository: 'test'
            command: 'push'
        
        
        - task: CopyFiles@2
          inputs:
            Contents: '*.jar'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
  
  - stage: Deployment_stage
    displayName: Deployment
    jobs:
      - job: Deployment
        pool:
         name: mypool
        steps:
        
        - task: KubernetesManifest@0
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: 'k8'
            namespace: 'default'
            manifests: 'mysql_configmap.yaml'

        - task: KubernetesManifest@0
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: 'k8'
            namespace: 'default'
            manifests: 'maven.yaml'
            imagePullSecrets: 'acr'
            
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: 'echo $(release.artifacts.pkmkumar3.training.BuildId)'